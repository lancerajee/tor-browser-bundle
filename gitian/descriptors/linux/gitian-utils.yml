---
name: "utils-linux"
distro: "debian"
suites:
- "wheezy"
architectures:
- "amd64"
packages:
- "automake"
- "libtool"
- "zip"
- "hardening-wrapper"
# Needed for compiling gold.
- "bison"
# Needed for compiling GCC.
- "libmpc-dev"
# These packages are needed for Python due to HTTPS-Everywhere >= 3.5.
- "libsqlite3-dev"
- "zlib1g-dev"
- "libxml2-dev"
- "libxslt-dev"
# Needed for passing the Python related part of configure in ESR 31.
- "libssl-dev"
# Needed for binutils (64bit) as we are building with PIE enabled.
- "libstdc++6-4.7-pic"
# Needed for Selfrando
- "scons"
reference_datetime: "2000-01-01 00:00:00"
remotes:
- "url": "https://github.com/libevent/libevent.git"
  "dir": "libevent"
- "url": "https://github.com/immunant/selfrando.git"
  "dir": "selfrando"
files:
- "binutils.tar.bz2"
- "gcc.tar.bz2"
- "openssl.tar.gz"
- "gmp.tar.bz2"
- "versions"
- "dzip.sh"
- "libfaketime-asan.patch"
- "elfutils.tar.bz2"
script: |
  INSTDIR="$HOME/install"
  source versions
  export TZ=UTC
  export LC_ALL=C
  export REFERENCE_DATETIME
  umask 0022

  # Config options for hardening-wrapper
  export DEB_BUILD_HARDENING=1
  export DEB_BUILD_HARDENING_STACKPROTECTOR=1
  export DEB_BUILD_HARDENING_FORTIFY=1
  export DEB_BUILD_HARDENING_FORMAT=1
  export DEB_BUILD_HARDENING_PIE=1

  # Building Binutils
  tar xjf binutils.tar.bz2
  # The libstdc++ shipped by default is non-PIC which breaks the binutils build
  # if we build with DEB_BUILD_HARDENING_PIE=1. We need to install a PIC one AND
  # make sure it gets used before the non-PIC one would.
  ln -s /usr/lib/gcc/x86_64-linux-gnu/4.7/libstdc++_pic.a libstdc++.a
  export LDFLAGS="-L/home/debian -lstdc++"
  cd binutils*
  # We want to use gold as the linker in our toolchain mainly as it is way
  # faster when linking Tor Browser code (especially libxul). But apart from
  # that it fixes #12103 and issues with ESR 31 and our Gitian setup as well
  # (see bug #12743).
  ./configure --prefix=$INSTDIR/binutils --disable-multilib --enable-gold --enable-plugins
  make $MAKEOPTS
  make install
  cd ..

  export LDFLAGS=""
  # We need to disable `-Werror=format-security` as GCC does not build with it
  # anymore. It seems it got audited for those problems already:
  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=48817.
  export DEB_BUILD_HARDENING_FORMAT=0
  # Building GCC
  tar xjf gcc.tar.bz2
  cd gcc-*
  patch -p1 < ~/build/libfaketime-asan.patch
  ./configure --prefix=$INSTDIR/gcc --disable-multilib --enable-languages=c,c++
  make $MAKEOPTS
  make install
  cd ..

  export DEB_BUILD_HARDENING_FORMAT=1
  OPATH="$PATH"
  OLD_LIBRARY_PATH="$LD_LIBRARY_PATH"
  export PATH="$INSTDIR/binutils/bin:$INSTDIR/gcc/bin:$PATH"
  export LD_LIBRARY_PATH="$INSTDIR/gcc/lib64/:$LD_LIBRARY_PATH"

  # Building Elfutils
  tar xjf elfutils.tar.bz2
  cd elfutils*/
  ./configure --prefix=$INSTDIR/elfutils
  make $MAKEOPTS
  make install
  cd ..

  # Building Selfrando
  cd selfrando
  scons -Q arch=x86_64 ADDN_CCFLAGS="-include $(ls $HOME/build/elfutils-*/libelf/elf.h) -I $INSTDIR/elfutils/include -fno-reorder-functions" ADDN_LINKFLAGS="-L $INSTDIR/elfutils/lib"
  mkdir -p $INSTDIR/self-rando
  cp sconsRelease/x86_64/bin/* $INSTDIR/self-rando/
  cd ..

  PATH="$OPATH"
  unset OPATH
  LD_LIBRARY_PATH="$OLD_LIBRARY_PATH"
  unset OLD_LIBRARY_PATH

  # Building Libevent
  cd libevent
  ./autogen.sh
  find -type f -print0 | xargs -0 touch --date="$REFERENCE_DATETIME"
  ./configure --disable-static --prefix=$INSTDIR/libevent
  make $MAKEOPTS
  make install
  cd ..

  # Building OpenSSL
  tar xzf openssl.tar.gz
  cd openssl-*
  find -type f -print0 | xargs -0 touch --date="$REFERENCE_DATETIME"
  ./config -shared --prefix=$INSTDIR/openssl enable-ec_nistp_64_gcc_128
  # Using $MAKEOPTS breaks the build. Might be the issue mentioned on
  # http://cblfs.cross-lfs.org/index.php/OpenSSL.
  make
  make install
  cd ..

  # Building GMP
  tar xjf gmp.tar.bz2
  cd gmp-*
  find -type f -print0 | xargs -0 touch --date="$REFERENCE_DATETIME"
  # Even if we are not shipping libgmpxx anymore we still need --enable-xcc
  # during compile time.
  # --enable-fat makes the binaries slightly bigger but fixes reproducibility
  # issues when compiling on LXC. See bug 12238 comment 4.
  ./configure --prefix=$INSTDIR/gmp --disable-static --enable-shared --enable-cxx --enable-fat
  make
  make install
  cd ..

  # Grabbing the remaining results and making sure timestamps don't spoil them
  # Since we stopped using libfaketime, the binutils, gcc, openssl,
  # libevent archives are no longer reproducible. The main reason
  # is that they include some .a archives which include timestamps.
  # Those files are however not part of the files we ship.
  cd $INSTDIR
  ~/build/dzip.sh binutils-$BINUTILS_VER-linux$GBUILD_BITS-utils.zip binutils
  ~/build/dzip.sh gcc-$GCC_VER-linux$GBUILD_BITS-utils.zip gcc
  ~/build/dzip.sh openssl-$OPENSSL_VER-linux$GBUILD_BITS-utils.zip openssl
  ~/build/dzip.sh libevent-${LIBEVENT_TAG#release-}-linux$GBUILD_BITS-utils.zip libevent
  ~/build/dzip.sh gmp-$GMP_VER-linux$GBUILD_BITS-utils.zip gmp
  ~/build/dzip.sh self-rando-utils.zip self-rando
  cp *utils.zip $OUTDIR/
