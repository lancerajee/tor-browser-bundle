---
name: "tor-windows"
suites:
- "precise"
architectures:
- "i386"
packages: 
- "git-core"
- "unzip"
- "zip"
- "autoconf"
- "automake"
- "autoconf2.13"
- "mingw-w64"
- "faketime"
- "libtool"
reference_datetime: "2000-01-01 00:00:00"
remotes:
- "url": "https://git.torproject.org/tor.git"
  "dir": "tor"
- "url": "https://github.com/libevent/libevent.git"
  "dir": "libevent"
- "url": "https://github.com/madler/zlib.git"
  "dir": "zlib"
files:
- "bug10297.patch"
- "bug5018.patch"
- "miniupnpc-dllwrap.patch"
- "binutils.tar.bz2"
- "dzip.sh"
- "openssl.tar.gz"
- "miniupnpc.tar.gz"
- "libnatpmp.tar.gz"
script: |
  INSTDIR="$HOME/install"
  export LIBRARY_PATH="$INSTDIR/lib"
  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1
  export FAKETIME=$REFERENCE_DATETIME
  export TZ=UTC
  export LC_ALL=C
  # XXX: Hardening options cause the exe's to crash.. not sure why
  #export CFLAGS="-mwindows -fstack-protector-all -fPIE -Wstack-protector --param ssp-buffer-size=4 -fno-strict-overflow -Wno-missing-field-initializers -Wformat-security"
  #export LDFLAGS="-mwindows -Wl,--dynamicbase -Wl,--nxcompat -lssp -L/usr/lib/gcc/i686-w64-mingw32/4.6/"
  umask 0022
  # 
  mkdir -p $INSTDIR/bin/
  mkdir -p $INSTDIR/Tor/
  mkdir -p $INSTDIR/Data/Tor/
  mkdir -p $OUTDIR/
  #
  mkdir binutils
  cd binutils
  tar -xjvf ../binutils.tar.bz2
  sed 's/= extern_rt_rel_d;/= extern_rt_rel_d;\n  memset (extern_rt_rel_d, 0, PE_IDATA5_SIZE);/' -i binutils-*/ld/pe-dll.c
  binutils-*/configure --prefix=/usr --target=i686-w64-mingw32 --disable-multilib
  make
  sudo make install
  cd ..
  #
  export CFLAGS="-mwindows"
  export LDFLAGS="-mwindows"
  cd zlib
  find -type f | xargs touch --date="$REFERENCE_DATETIME"
  make BINARY_PATH=$INSTDIR/zlib/lib INCLUDE_PATH=$INSTDIR/zlib/include LIBRARY_PATH=$INSTDIR/zlib/lib -f win32/Makefile.gcc PREFIX=i686-w64-mingw32- $MAKEOPTS SHARED_MODE=1
  make BINARY_PATH=$INSTDIR/zlib/lib INCLUDE_PATH=$INSTDIR/zlib/include LIBRARY_PATH=$INSTDIR/zlib/lib -f win32/Makefile.gcc PREFIX=i686-w64-mingw32- $MAKEOPTS SHARED_MODE=1 install
  cp $INSTDIR/zlib/lib/*.dll $INSTDIR/Tor/
  cd ..
  #
  cd libevent
  ./autogen.sh
  find -type f | xargs touch --date="$REFERENCE_DATETIME"
  ./configure --disable-static --host=i686-w64-mingw32 --prefix=$INSTDIR/libevent
  make $MAKEOPTS
  make install
  cp $INSTDIR/libevent/bin/*.dll $INSTDIR/Tor/
  cd ..
  #
  tar xzf openssl.tar.gz
  cd openssl-*
  find -type f | xargs touch --date="$REFERENCE_DATETIME"
  ./Configure -shared --cross-compile-prefix=i686-w64-mingw32- mingw --prefix=$INSTDIR/openssl #enable-ec_nistp_64_gcc_128
  make
  make install
  cp $INSTDIR/openssl/bin/*.dll $INSTDIR/Tor/
  cd ..
  #
  tar xzf miniupnpc.tar.gz
  cd miniupnpc-*
  patch -p0 < ~/build/miniupnpc-dllwrap.patch
  find -type f | xargs touch --date="$REFERENCE_DATETIME"
  # Building miniupnpcstrings.h with Makefile uses a shell script. With
  # Makefile.mingw it tries to build and run a Windows executable
  # (wingenminiupnpcstrings), which fails because we are cross-compiling.
  make -f Makefile miniupnpcstrings.h
  make -f Makefile.mingw -o miniupnpcstrings.h CC=i686-w64-mingw32-gcc AR=i686-w64-mingw32-ar DLLWRAP=i686-w64-mingw32-dllwrap OS=NT-5.1 CFLAGS="$CFLAGS -Wall -DNDEBUG -D_WIN32_WINNT=0X501"
  mkdir -p $INSTDIR/miniupnpc/{include/miniupnpc,lib}
  cp miniupnpc.h miniwget.h upnpcommands.h igd_desc_parse.h upnpreplyparse.h upnperrors.h miniupnpctypes.h portlistingparse.h declspec.h bsdqueue.h $INSTDIR/miniupnpc/include/miniupnpc
  cp miniupnpc.dll $INSTDIR/miniupnpc/lib/
  cp $INSTDIR/miniupnpc/lib/miniupnpc.dll $INSTDIR/Tor
  cd ..
  #
  tar xzf libnatpmp.tar.gz
  cd libnatpmp-*
  find -type f | xargs touch --date="$REFERENCE_DATETIME"
  # These commands are adapted from libnatpmp's build.bat, which doesn't allow
  # overriding commands and command-line options.
  i686-w64-mingw32-gcc -c $CFLAGS -Wall -Os -DWIN32 wingettimeofday.c
  i686-w64-mingw32-gcc -c $CFLAGS -Wall -Os -DWIN32 -DENABLE_STRNATPMPERR -DNATPMP_EXPORTS getgateway.c
  i686-w64-mingw32-gcc -c $CFLAGS -Wall -Os -DWIN32 -DENABLE_STRNATPMPERR -DNATPMP_EXPORTS natpmp.c
  i686-w64-mingw32-dllwrap -k --driver-name i686-w64-mingw32-gcc --def natpmp.def --output-def natpmp.dll.def --implib natpmp.lib -o natpmp.dll getgateway.o natpmp.o wingettimeofday.o -lws2_32 -liphlpapi
  mkdir -p $INSTDIR/libnatpmp/{include,lib}
  cp natpmp.h declspec.h $INSTDIR/libnatpmp/include
  cp natpmp.dll $INSTDIR/libnatpmp/lib
  cp $INSTDIR/libnatpmp/lib/natpmp.dll $INSTDIR/Tor
  cd ..
  #
  cd tor
  git update-index --refresh -q
  export GIT_COMMITTER_NAME="nobody"
  export GIT_COMMITTER_EMAIL="nobody@localhost"
  export GIT_COMMITTER_DATE="$REFERENCE_DATETIME"
  git am ~/build/bug10297.patch
  git am ~/build/bug5018.patch
  mkdir -p $OUTDIR/src
  git archive HEAD | tar -x -C $OUTDIR/src
  ./autogen.sh
  find -type f | xargs touch --date="$REFERENCE_DATETIME"
  ./configure --disable-asciidoc --host=i686-w64-mingw32 --with-libevent-dir=$INSTDIR/libevent --with-openssl-dir=$INSTDIR/openssl --prefix=$INSTDIR --with-zlib-dir=$INSTDIR/zlib/
  make $MAKEOPTS
  make install
  cd ..
  install -s $INSTDIR/bin/tor.exe $INSTDIR/Tor/
  cp $INSTDIR/share/tor/geoip $INSTDIR/Data/Tor/
  # XXX: Geoip files..
  #
  cp -a /usr/lib/gcc/i686-w64-mingw32/4.6/libgcc_s_sjlj-1.dll $INSTDIR/Tor/
  cp -a /usr/lib/gcc/i686-w64-mingw32/4.6/libssp*.dll $INSTDIR/Tor/
  #
  cd $INSTDIR
  ~/build/dzip.sh tor-win32-gbuilt.zip Tor/ Data/
  cp tor-win32-gbuilt.zip $OUTDIR/
