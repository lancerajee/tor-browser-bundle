---
name: "bundle-windows"
suites:
- "precise"
architectures:
- "i386"
packages: 
- "git-core"
- "unzip"
- "zip"
- "mingw-w64"
- "nsis"
- "faketime"
- "python"
reference_datetime: "2000-01-01 00:00:00"
remotes:
- "url": "https://github.com/moba/tbb-windows-installer.git"
  "dir": "tbb-windows-installer"
- "url": "https://git.torproject.org/tor-launcher.git"
  "dir": "tor-launcher"
- "url": "https://git.torproject.org/torbutton.git"
  "dir": "torbutton"
- "url": "https://git.torproject.org/https-everywhere.git"
  "dir": "https-everywhere"
files:
# TODO: Can we use an env for this file+version??
- "tor-browser-win32-gbuilt.zip"
- "tor-win32-gbuilt.zip"
- "pluggable-transports-win32-gbuilt.zip"
- "torrc-defaults-appendix-windows"
- "relativelink-src.zip"
- "windows-skeleton.zip"
- "win32-langpacks.zip"
- "noscript@noscript.net.xpi"
- "dzip.sh"
- "bare-version"
- "bundle.inputs"
- "versions"
- "tbb-docs.zip"
script: |
  INSTDIR="$HOME/install"
  source versions
  export LIBRARY_PATH="$INSTDIR/lib"
  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1
  export FAKETIME=$REFERENCE_DATETIME
  export TZ=UTC
  export TORBROWSER_VERSION=`cat bare-version`
  export LC_ALL=C
  umask 0022
  # 
  mkdir -p $OUTDIR/
  mkdir -p tbb-windows-installer/"Tor Browser"/Data/Browser/profile.default/extensions/https-everywhere@eff.org
  mkdir -p tbb-windows-installer/"Tor Browser"/Data/Browser/Caches
  mkdir -p tbb-windows-installer/"Tor Browser"/Docs/sources
  #
  cd tor-launcher
  make clean
  make package
  # FIXME: Switch to re-dzip.sh here?
  mkdir pkg/tmp
  cd pkg/tmp
  unzip ../*.xpi
  rm ../*.xpi
  ~/build/dzip.sh ../tor-launcher@torproject.org.xpi .
  mv ../tor-launcher@torproject.org.xpi ../../../tbb-windows-installer/"Tor Browser"/Data/Browser/profile.default/extensions/tor-launcher@torproject.org.xpi
  cd ../../../
  #
  cd torbutton
  mkdir -p pkg/tmp
  ./makexpi.sh
  # FIXME: Switch to re-dzip.sh here?
  cd pkg/tmp
  unzip ../*.xpi
  rm ../*.xpi
  ~/build/dzip.sh ../torbutton@torproject.org.xpi .
  mv ../torbutton@torproject.org.xpi ../../../tbb-windows-installer/"Tor Browser"/Data/Browser/profile.default/extensions/torbutton@torproject.org.xpi
  cd ../../../
  #
  cd https-everywhere
  # XXX: Bloody hack to workaround a bug in HTTPS_E's git hash extraction in
  # makexpi.sh. See https://trac.torproject.org/projects/tor/ticket/10066
  rm -f .git/refs/heads/master
  ./makexpi.sh
  cp ./pkg/*.xpi ../tbb-windows-installer/"Tor Browser"/Data/Browser/profile.default/extensions/https-everywhere@eff.org.xpi
  cd ..
  #
  cp *.xpi ./tbb-windows-installer/"Tor Browser"/Data/Browser/profile.default/extensions
  cd ./tbb-windows-installer/"Tor Browser"/Data/Browser/profile.default/extensions
  mv noscript@noscript.net.xpi {73a6fe31-595d-460b-a920-fcc0f8843232}.xpi
  cd https-everywhere@eff.org
  unzip ../https-everywhere@eff.org.xpi
  rm ../https-everywhere@eff.org.xpi
  cd ~/build/
  #
  unzip relativelink-src.zip
  cd RelativeLink
  make clean
  make
  cp StartTorBrowserBundle.exe ../tbb-windows-installer/"Tor Browser"/"Start Tor Browser.exe"
  cd ..
  #
  cd tbb-windows-installer
  cd "Tor Browser"
  unzip ~/build/tor-browser-win32-gbuilt.zip
  unzip ~/build/tor-win32-gbuilt.zip
  unzip ~/build/windows-skeleton.zip
  unzip ~/build/tbb-docs.zip
  if [ $BUILD_PT_BUNDLES ]; then
    unzip ~/build/pluggable-transports-win32-gbuilt.zip
    cat ~/build/torrc-defaults-appendix-windows >> Data/Tor/torrc-defaults
    # py2exe-built programs using M2Crypto need libeay32.dll and ssleay32.dll
    # to be in their DLL search path (which includes the directory containing
    # the program).
    cp Tor/libeay32.dll Tor/ssleay32.dll Tor/PluggableTransports
  fi
  cd ..
  #
  # Copy reproducibility info
  cp ../versions "Tor Browser"/Docs/sources/
  cp ../bundle.inputs "Tor Browser"/Docs/sources/
  #
  # FF24 puts the prefs in a different jar:
  if [ -f "Tor Browser"/Browser/browser/omni.ja ]; then
     pushd "Tor Browser"/Browser/browser/
  else
     pushd "Tor Browser"/Browser/
  fi
  unzip omni.ja defaults/preferences/000-tor-browser.js
  cp defaults/preferences/000-tor-browser.js ~/build/
  echo "pref(\"general.useragent.locale\", \"en-US\");" >> defaults/preferences/000-tor-browser.js
  zip -Xm omni.ja defaults/preferences/000-tor-browser.js
  popd
  makensis torbrowser.nsi
  mv torbrowser-install.exe $OUTDIR/torbrowser-install-${TORBROWSER_VERSION}_en-US.exe
  #
  unzip ../win32-langpacks.zip
  cd win32-langpacks
  for i in *.xpi
  do
    LANG=`basename $i .xpi`
    cp $i ../"Tor Browser"/Data/Browser/profile.default/extensions/langpack-$LANG@firefox.mozilla.org.xpi
    cd ..

    # FF24 puts the prefs in a different jar:
    if [ -f "Tor Browser"/Browser/browser/omni.ja ]; then
       pushd "Tor Browser"/Browser/browser/
    else
       pushd "Tor Browser"/Browser/
    fi

    mkdir -p defaults/preferences
    cp ~/build/000-tor-browser.js defaults/preferences/000-tor-browser.js
    echo "pref(\"general.useragent.locale\", \"$LANG\");" >> defaults/preferences/000-tor-browser.js
    zip -Xm omni.ja defaults/preferences/000-tor-browser.js
    popd

    makensis torbrowser.nsi
    mv torbrowser-install.exe $OUTDIR/torbrowser-install-${TORBROWSER_VERSION}_$LANG.exe
    rm ./"Tor Browser"/Data/Browser/profile.default/extensions/langpack-$LANG@firefox.mozilla.org.xpi
    cd win32-langpacks
  done 
  cd ..
