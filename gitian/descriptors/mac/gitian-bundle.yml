---
name: "bundle-mac"
suites:
- "precise"
architectures:
- "amd64"
packages:
- "faketime"
- "unzip"
- "zip"
# These three packages are needed for assembling the HTTPS-Everywhere rules
# since 5.0.
- "python-lxml"
- "libxml2-utils"
- "sqlite3"
# Needed for the .dmgs
- "genisoimage"
- "cmake"
- "zlib1g-dev"
- "libbz2-dev"
reference_datetime: "2000-01-01 00:00:00"
remotes:
- "url": "https://git.torproject.org/tor-launcher.git"
  "dir": "tor-launcher"
- "url": "https://git.torproject.org/torbutton.git"
  "dir": "torbutton"
- "url": "https://git.torproject.org/https-everywhere.git"
  "dir": "https-everywhere"
- "url": "https://github.com/vasi/libdmg-hfsplus.git"
  "dir": "libdmg-hfsplus"
- "url": "https://git.torproject.org/pluggable-transports/meek.git"
  "dir": "meek"
files:
# TODO: Can we use an env for this file+version??
- "tor-browser-mac64-gbuilt.zip"
- "tor-mac64-gbuilt.zip"
- "pluggable-transports-mac64-gbuilt.zip"
- "torrc-defaults-appendix-mac"
- "bridge_prefs.js"
- "meek-http-helper-user.js"
- "TorBrowser.app.meek-http-helper.zip"
- "mac-skeleton.zip"
- "dmg-applications.tar.xz"
- "dmg-desktop.tar.xz"
- "mac-langpacks.zip"
- "noscript@noscript.net.xpi"
- "dzip.sh"
- "ddmg.sh"
- "background-plist.py"
- "libdmg.patch"
- "bare-version"
- "bundle.inputs"
- "versions"
- "mar-tools-mac64.zip"
- "tbb-docs.zip"
- "mac-tor.sh"
script: |
  INSTDIR="$HOME/install"
  source versions
  export LIBRARY_PATH="$INSTDIR/lib"
  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1
  export FAKETIME=$REFERENCE_DATETIME
  export TZ=UTC
  export TORBROWSER_VERSION=`cat bare-version`
  export LC_ALL=C
  umask 0022
  export TORBROWSER_APP="TorBrowser"
  export TORBROWSER_NAME="TorBrowserBundle"
  #
  # Extract the MAR tools.
  unzip -d ~/build ~/build/mar-tools-mac$GBUILD_BITS.zip
  MARTOOLS=~/build/mar-tools
  #
  mkdir -p $OUTDIR/
  mkdir -p $TORBROWSER_NAME.app/TorBrowser/Data/Browser/profile.default/extensions/https-everywhere@eff.org
  mkdir -p $TORBROWSER_NAME.app/TorBrowser/Data/Browser/profile.meek-http-helper/extensions
  mkdir -p $TORBROWSER_NAME.app/TorBrowser/Data/Browser/Caches
  mkdir -p $TORBROWSER_NAME.app/TorBrowser/Docs/sources
  mkdir -p $TORBROWSER_NAME.app/Contents/MacOS
  mkdir -p dmg
  #
  cd tor-launcher
  make clean
  make package
  # FIXME: Switch to re-dzip.sh here?
  mkdir pkg/tmp
  cd pkg/tmp
  unzip ../*.xpi
  ~/build/dzip.sh ../../../$TORBROWSER_NAME.app/TorBrowser/Data/Browser/profile.default/extensions/tor-launcher@torproject.org.xpi .
  cd ../../../
  #
  cd torbutton
  mkdir -p pkg
  ./makexpi.sh
  # FIXME: Switch to re-dzip.sh here?
  mkdir pkg/tmp
  cd pkg/tmp
  unzip ../*.xpi
  ~/build/dzip.sh ../../../$TORBROWSER_NAME.app/TorBrowser/Data/Browser/profile.default/extensions/torbutton@torproject.org.xpi .
  cd ../../../
  #
  cd https-everywhere
  # XXX: Bloody hack to workaround a bug in HTTPS_E's git hash extraction in
  # makexpi.sh. See https://trac.torproject.org/projects/tor/ticket/10066
  rm -f .git/refs/heads/master
  ./makexpi.sh
  # Since 5.0.2 a .xpi for AMO is built, too. We don't need it.
  rm ./pkg/*-amo.xpi
  cp pkg/*.xpi ../$TORBROWSER_NAME.app/TorBrowser/Data/Browser/profile.default/extensions/https-everywhere@eff.org.xpi
  cd ..
  #
  cp *.xpi ./$TORBROWSER_NAME.app/TorBrowser/Data/Browser/profile.default/extensions/
  cd $TORBROWSER_NAME.app/TorBrowser/Data/Browser/profile.default/extensions/
  mv noscript@noscript.net.xpi {73a6fe31-595d-460b-a920-fcc0f8843232}.xpi
  cd https-everywhere@eff.org
  unzip ../https-everywhere@eff.org.xpi
  rm ../https-everywhere@eff.org.xpi
  cd ~/build/
  #
  cd meek/firefox
  ~/build/dzip.sh ../../$TORBROWSER_NAME.app/TorBrowser/Data/Browser/profile.meek-http-helper/extensions/meek-http-helper@bamsoftware.com.xpi .
  cd ~/build/
  #
  unzip tor-mac$GBUILD_BITS-gbuilt.zip
  if [ $BUILD_PT_BUNDLES ]; then
    unzip pluggable-transports-mac$GBUILD_BITS-gbuilt.zip
  fi
  cd $TORBROWSER_NAME.app
  unzip ~/build/mac-skeleton.zip
  cd TorBrowser
  unzip ~/build/tbb-docs.zip
  if [ $BUILD_PT_BUNDLES ]; then
    cat ~/build/torrc-defaults-appendix-mac >> Data/Tor/torrc-defaults
    cat ~/build/bridge_prefs.js >> Data/Browser/profile.default/preferences/extension-overrides.js
    cat ~/build/meek-http-helper-user.js >> Data/Browser/profile.meek-http-helper/user.js
  fi
  # Install a "tor" shim that sets the working directory. See #10030.
  mv Tor/tor Tor/tor.real
  cp ~/build/mac-tor.sh Tor/tor
  cd ..
  unzip ~/build/tor-browser-mac$GBUILD_BITS-gbuilt.zip
  cd ..
  #
  # Copy reproducibility info
  cp versions $TORBROWSER_NAME.app/TorBrowser/Docs/sources/
  cp bundle.inputs $TORBROWSER_NAME.app/TorBrowser/Docs/sources/
  #
  # Set up DMG skeleton
  cd libdmg-hfsplus
  git am ~/build/libdmg.patch
  cmake CMakeLists.txt
  cd dmg
  make
  cd ../../dmg
  # FIXME: Desktop or Application as dest?
  tar -Jxvf ~/build/dmg-applications.tar.xz
  cd ..
  #
  pushd $TORBROWSER_NAME.app/Contents/Resources/browser/
  unzip omni.ja defaults/preferences/000-tor-browser.js
  cp defaults/preferences/000-tor-browser.js ~/build/
  # Set the locale of the bundle.
  echo "pref(\"general.useragent.locale\", \"en-US\");" >> defaults/preferences/000-tor-browser.js
  zip -Xm omni.ja defaults/preferences/000-tor-browser.js
  rm -rf defaults
  popd
  # Install a headless copy of TorBrowser.app, with a modified Info.plist so
  # that it runs without a dock icon. See #11429.
  pushd $TORBROWSER_NAME.app/TorBrowser/Tor/PluggableTransports
  mkdir -p TorBrowser.app.meek-http-helper/Contents
  (cd TorBrowser.app.meek-http-helper/Contents && ln -s ../../../../../Contents/* .)
  rm -f TorBrowser.app.meek-http-helper/Contents/Info.plist
  ~/build/background-plist.py ../../../Contents/Info.plist > TorBrowser.app.meek-http-helper/Contents/Info.plist
  unzip ~/build/TorBrowser.app.meek-http-helper.zip
  popd
  #
  # XXX: We need to insert these placeholders because otherwise mkisofs won't
  # include these otherwise empty dirs:
  touch ~/build/$TORBROWSER_NAME.app/TorBrowser/Data/Browser/Caches/placeholder.txt
  # Recreate precomplete file (needs to be accurate for full MAR updates).
  pushd ~/build/$TORBROWSER_NAME.app/Contents/Resources/
  rm -f precomplete
  python $MARTOOLS/createprecomplete.py
  popd
  #
  # Create full MAR file and disk image.
  MAR_FILE=tor-browser-osx${GBUILD_BITS}-${TORBROWSER_VERSION}_en-US.mar
  MAR=$MARTOOLS/mar MBSDIFF=$MARTOOLS/mbsdiff $MARTOOLS/make_full_update.sh -q $OUTDIR/$MAR_FILE ~/build/$TORBROWSER_NAME.app
  cp -a ~/build/$TORBROWSER_NAME.app ~/build/dmg/$TORBROWSER_APP.app
  ~/build/ddmg.sh $OUTDIR/TorBrowser-${TORBROWSER_VERSION}-osx${GBUILD_BITS}_en-US.dmg ~/build/dmg
  rm -rf ~/build/dmg/$TORBROWSER_APP.app
  mv $TORBROWSER_NAME.app ${TORBROWSER_NAME}_plain.app
  #
  unzip mac-langpacks.zip
  cd mac-langpacks
  for LANG in $BUNDLE_LOCALES
  do
    xpi=$LANG.xpi
    DEST=$TORBROWSER_APP
    cp -a ../${TORBROWSER_NAME}_plain.app ~/build/dmg/$DEST.app
    cp $xpi ~/build/dmg/$DEST.app/TorBrowser/Data/Browser/profile.default/extensions/langpack-$LANG@firefox.mozilla.org.xpi
    cd ..

    pushd ~/build/dmg/$DEST.app/Contents/Resources/browser/
    mkdir -p defaults/preferences
    cp ~/build/000-tor-browser.js defaults/preferences/
    # Set the locale of the bundle.
    echo "pref(\"general.useragent.locale\", \"$LANG\");" >> defaults/preferences/000-tor-browser.js
    zip -Xm omni.ja defaults/preferences/000-tor-browser.js
    rm -rf defaults
    popd

    # Set the update.locale (it is used to replace %LOCALE% within
    # app.update.url) and recreate the precomplete file (needs to be accurate
    # for full MAR updates).
    pushd ~/build/dmg/$DEST.app/Contents/Resources/
    echo "$LANG" > update.locale
    zip -Xm omni.ja update.locale
    rm -f precomplete
    python $MARTOOLS/createprecomplete.py
    popd
    #
    MAR_FILE=tor-browser-osx${GBUILD_BITS}-${TORBROWSER_VERSION}_$LANG.mar
    MAR=$MARTOOLS/mar MBSDIFF=$MARTOOLS/mbsdiff $MARTOOLS/make_full_update.sh -q $OUTDIR/$MAR_FILE ~/build/dmg/$DEST.app
     ~/build/ddmg.sh $OUTDIR/TorBrowser-${TORBROWSER_VERSION}-osx${GBUILD_BITS}_$LANG.dmg ~/build/dmg/
    rm -rf ~/build/dmg/$DEST.app
    cd mac-langpacks
  done
